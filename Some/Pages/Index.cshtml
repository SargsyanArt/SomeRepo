@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Shalala la la</h1>
</div>
<div>
    <canvas id="chart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const canvas = document.getElementById('chart');
    canvas.height = 75;

    const labels = [
         new Date().toLocaleTimeString(),
         new Date().toLocaleTimeString(),
         new Date().toLocaleTimeString(),
         new Date().toLocaleTimeString(),
         new Date().toLocaleTimeString(),
         new Date().toLocaleTimeString(),
    ];

    const data = {
        labels: labels,
        datasets: [{
            label: 'Some really really important data',
            backgroundColor: 'rgb(255, 99, 132)',
            borderColor: 'rgb(255, 99, 132)',
            data: [0, 10, 5, 4, 3, 8],
        }]
    };

    const config = {
        type: 'line',
        data: data,
        options: {
            x: {
                radius: {
                    duration: 1000,
                    easing: 'easeInOutBounce',
                    from: 1,
                    to: 0,
                    loop: true
                }
            },
            scales: {
                y: { // defining min and max so hiding the dataset does not change scale range
                    min: 0,
                    max: 100
                }
            }
        }
    };

    const chart = new Chart(
        canvas,
        config
    );

    const socket = new WebSocket('wss://localhost:7002/ws');
    // Connection opened
    socket.onopen = (event) => {
        console.log('WebSocket connection opened:', event);
    };

    // Listen for messages
    socket.onmessage = (event) => {
        const data = JSON.parse(event.data);
        console.log('Received message:', data);
        addData(chart, data.Time, data.Value);

        fetch('/data/send', {
            method: 'POST',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: event.data
        })
            .then(response => response.json())
            .then(response => console.log(JSON.stringify(response)))


        var xhr = new XMLHttpRequest();
        var url = "/data/send";
        xhr.open("POST", url, true);
        xhr.setRequestHeader("Content-Type", "application/json");

        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status === 200) {
                var json = JSON.parse(xhr.responseText);
                console.log(json);
            }
        };

        xhr.send(JSON.stringify(data));

    };

    // Connection closed
    socket.onclose = (event) => {
        console.log('WebSocket connection closed:', event);
    };

    // Connection error
    socket.onerror = (error) => {
        console.error('WebSocket error:', error);
    };

    // function to update the chart
    function addData(chart, label, data) {
        chart.data.labels.shift();
        chart.data.labels.push(label);
        chart.data.datasets.forEach((dataset) => {
            dataset.data.shift();
            dataset.data.push(data);
        });
        chart.update();
    }
</script>
